services:
  traefik:
    image: traefik:v3.0
    command:
      - --providers.docker
      - --providers.docker.exposedbydefault=false
      - --providers.file.filename=/etc/traefik/dynamic.yml
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./docker/traefik/traefik.yml:/etc/traefik/traefik.yml:ro
      - ./docker/traefik/dynamic.yml:/etc/traefik/dynamic.yml:ro
    networks:
      - traefik

  postgres:
    image: postgres:16-alpine
    environment:
      POSTGRES_USER: app
      POSTGRES_PASSWORD: app
      POSTGRES_DB: app
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./docker/postgres/init:/docker-entrypoint-initdb.d
    networks:
      - internal

  redis:
    image: redis:7-alpine
    volumes:
      - redis-data:/data
    networks:
      - internal

  mailhog:
    image: mailhog/mailhog:v1.0.1
    ports:
      - "1025:1025"
      - "8025:8025"
    networks:
      - internal

  auth-service:
    build: ./services/auth-service
    networks:
      - internal
      - traefik
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.auth.rule=Host(`auth.localhost`)"
      - "traefik.http.routers.auth.entrypoints=web"
      - "traefik.http.services.auth.loadbalancer.server.port=8000"
      - "traefik.http.routers.auth.middlewares=secure-headers@file,rate-limit@file"

  user-service:
    build: ./services/user-service
    networks:
      - internal
      - traefik
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.user.rule=Host(`user.localhost`)"
      - "traefik.http.routers.user.entrypoints=web"
      - "traefik.http.services.user.loadbalancer.server.port=8000"
      - "traefik.http.routers.user.middlewares=secure-headers@file,rate-limit@file"

  web:
    build: ./web
    networks:
      - internal
      - traefik
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.web.rule=Host(`web.localhost`)"
      - "traefik.http.routers.web.entrypoints=web"
      - "traefik.http.services.web.loadbalancer.server.port=3000"
      - "traefik.http.routers.web.middlewares=secure-headers@file,rate-limit@file"

networks:
  traefik:
    driver: bridge
  internal:
    driver: bridge

volumes:
  postgres-data:
  redis-data:
